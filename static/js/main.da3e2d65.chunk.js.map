{"version":3,"sources":["Components/Modal/Modal.module.css","Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Components/Searchbar/Searchbar.module.css","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Modal/Modal.js","Components/services/images-api.js","App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","query","setQuery","className","styles","SearchForm","e","preventDefault","type","SearchFormButton","label","value","onChange","currentTarget","input","autoComplete","autoFocus","placeholder","ImageGalleryItem","handleClick","largeImageURL","onClick","props","image","this","src","webformatURL","srcSet","alt","ImageGalleryItemImage","id","Component","ImageGallery","images","map","Button","totalImages","currentPage","useEffect","window","scrollTo","top","document","documentElement","scrollHeight","behavior","button","modalRoot","querySelector","Modal","onClose","addEventListener","handleKeyDown","removeEventListener","code","createPortal","overlay","modal","target","modalImg","searchQuery","axios","get","then","response","data","hits","App","setImages","imageForModal","setImageForModal","setCurrentPage","setSearchQuery","isLoading","setIsLoading","error","setError","showModal","setShowModal","prevSearchQuery","fetchImages","options","imagesApi","newImages","catch","finally","toggleModal","shouldRenderLoadMoreButton","length","img","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.da3e2d65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__CGA-l\",\"modal\":\"Modal_modal__3IY9v\",\"modalImg\":\"Modal_modalImg__DxDyP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1KrFq\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__Z9S0o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__24bSJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__243eH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1u_A6\",\"SearchForm\":\"Searchbar_SearchForm__1bART\",\"SearchFormButton\":\"Searchbar_SearchFormButton__285-p\",\"label\":\"Searchbar_label__12PIR\",\"input\":\"Searchbar_input__3A2om\"};","import { useState } from 'react';\nimport styles from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <header className={styles.Searchbar}>\n      <form className={styles.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.SearchFormButton}>\n          <span className={styles.label}>Search</span>\n        </button>\n\n        <input\n          value={query}\n          onChange={handleChange}\n          className={styles.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n","import { Component } from 'react';\n\nimport styles from './ImageGalleryItem.module.css';\n\nclass ImageGalleryItem extends Component {\n  handleClick = largeImageURL => {\n    const { onClick } = this.props;\n    onClick(largeImageURL);\n  };\n\n  render() {\n    const { image } = this.props;\n    return (\n      <li\n        key={image.id}\n        className={styles.ImageGalleryItem}\n        onClick={() => this.handleClick(image.largeImageURL)}\n      >\n        <img\n          src={image.webformatURL}\n          srcSet={image.largeImageURL}\n          alt=\"\"\n          className={styles.ImageGalleryItemImage}\n        />\n      </li>\n    );\n  }\n}\n\nexport default ImageGalleryItem;\n","import styles from './ImageGallery.module.css';\nimport { Component } from 'react';\n\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nclass ImageGallery extends Component {\n  render() {\n    const { images, onClick } = this.props;\n\n    return (\n      <ul className={styles.ImageGallery}>\n        {images.map(image => (\n          <ImageGalleryItem key={image.id} onClick={onClick} image={image} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default ImageGallery;\n","import { useEffect } from 'react';\n\nimport styles from './Button.module.css';\n\nexport default function Button({ totalImages, currentPage, onClick }) {\n  useEffect(() => {\n    if (totalImages > 10 && currentPage > 2) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }, [totalImages, currentPage]);\n\n  return (\n    <button type=\"button\" onClick={onClick} className={styles.button}>\n      Load more\n    </button>\n  );\n}\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, image }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handlebackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={styles.overlay}>\n      <div className={styles.modal} onClick={handlebackdropClick}>\n        <img src={image} alt=\"\" className={styles.modalImg} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '21843177-dc493b9de0e38d6cc05d61e8e';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nconst fetchImages = ({ searchQuery, currentPage }) => {\n  return axios\n    .get(\n      `${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${currentPage}&per_page=12&key=${API_KEY}`,\n    )\n    .then(response => response.data.hits);\n};\n\nexport default { fetchImages };\n","import { useState, useEffect } from 'react';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport Searchbar from './Components/Searchbar';\nimport ImageGallery from './Components/ImageGallery';\nimport Button from './Components/Button';\nimport Modal from './Components/Modal';\n\nimport imagesApi from './Components/services/images-api';\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [imageForModal, setImageForModal] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(\n    prevSearchQuery => {\n      if (!searchQuery) {\n        return;\n      }\n\n      if (prevSearchQuery === searchQuery) {\n        return;\n      }\n\n      fetchImages();\n    },\n    [searchQuery],\n  );\n\n  const onChangeQuery = query => {\n    setImages([]);\n    setCurrentPage(1);\n    setSearchQuery(query);\n    setError(null);\n  };\n\n  const onChangeModalImg = img => {\n    setImageForModal(img);\n    toggleModal();\n  };\n\n  const fetchImages = () => {\n    const options = { searchQuery, currentPage };\n\n    setIsLoading(true);\n\n    imagesApi\n      .fetchImages(options)\n      .then(newImages => {\n        setImages([...images, ...newImages]);\n        setCurrentPage(currentPage + 1);\n      })\n      .catch(error => setError(error))\n      .finally(() => setIsLoading(false));\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const shouldRenderLoadMoreButton = images.length >= 12 && !isLoading;\n  const totalImages = images.length;\n\n  return (\n    <>\n      <Searchbar onSubmit={onChangeQuery} />\n      <ImageGallery images={images} onClick={onChangeModalImg} />\n      {isLoading && (\n        <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\n      )}\n      {error && <p>Oops...</p>}\n      {shouldRenderLoadMoreButton && (\n        <Button\n          onClick={fetchImages}\n          totalImages={totalImages}\n          currentPage={currentPage}\n        />\n      )}\n      {showModal && <Modal onClose={toggleModal} image={imageForModal} />}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}